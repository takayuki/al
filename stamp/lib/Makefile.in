#
#  Al -- an implementation of the adaptive locks
#
#  Copyright (C) 2008, University of Oregon
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are
#  met:
#
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#
#    * Neither the name of University of Oregon nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY UNIVERSITY OF OREGON ``AS IS'' AND ANY
#  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
#  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL STANFORD UNIVERSITY BE LIABLE
#  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
#  THE POSSIBILITY OF SUCH DAMAGE.
#
srcdir = @srcdir@
prefix = @prefix@
top_srcdir = @top_srcdir@

CC = @CC@
CPPFLAGS = @DEFS@ -I. -I$(top_srcdir) -DLIST_NO_DUPLICATES @CPPFLAGS@
CFLAGS = @CFLAGS@ @PTHREAD_CFLAGS@
LDFLAGS = -L$(top_srcdir)/tl2 @PTHREAD_CFLAGS@ @LDFLAGS@
LIBS = -ltl2 @PTHREAD_LIBS@ @LIBS@
AR = @AR@
GNUMAKE = @GNUMAKE@
INSTALL = @INSTALL@
CILLY = $(top_srcdir)/cil/bin/cilly
CILLYFLAGS = --keepunused --doatomic --save-temps #--check

OBJS = bitmap.o memory.o mt19937ar.o pair.o queue.o random.o rbtree.o \
  thread.o vector.o hash.o hashtable.o

.c.o:
	$(CC) $(CPPFLAGS) $(CFLAGS) -c $(srcdir)/$<

all: libstamp.a

libstamp.a: $(OBJS)
	$(AR) rcs libstamp.a $(OBJS)

pair.o: pair.c $(top_srcdir)/alx.h pair.h types.h tm.h
	$(CILLY) $(CILLYFLAGS) $(CPPFLAGS) $(CFLAGS) -c $(srcdir)/$<
queue.o: queue.c $(top_srcdir)/alx.h queue.h random.h types.h tm.h
	$(CILLY) $(CILLYFLAGS) $(CPPFLAGS) $(CFLAGS) -c $(srcdir)/$<
rbtree.o: rbtree.c $(top_srcdir)/alx.h rbtree.h memory.h tm.h
	$(CILLY) $(CILLYFLAGS) $(CPPFLAGS) $(CFLAGS) -c $(srcdir)/$<
hashtable.o: hashtable.c $(top_srcdir)/alx.h list.h pair.h types.h tm.h
	$(CILLY) $(CILLYFLAGS) $(CPPFLAGS) $(CFLAGS) -c $(srcdir)/$<

clean:
	rm -f libstamp.a
	rm -f *.cil.c *.cil.i *.i *.o gmon.out core *.core *~

distclean: clean
	rm -f Makefile
