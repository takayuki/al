#
#  Al -- an implementation of the adaptive locks
#
#  Copyright (C) 2008, University of Oregon
#  All rights reserved.
# 
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are
#  met:
#  
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#  
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#  
#    * Neither the name of University of Oregon nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#  
#  THIS SOFTWARE IS PROVIDED BY UNIVERSITY OF OREGON ``AS IS'' AND ANY
#  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
#  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL STANFORD UNIVERSITY BE LIABLE
#  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
#  THE POSSIBILITY OF SUCH DAMAGE.
#
srcdir = @srcdir@
prefix = @prefix@

CC = @CC@
CPPFLAGS = @DEFS@ -I. -DNDEBUG @CPPFLAGS@
CFLAGS = @CFLAGS@ @PTHREAD_CFLAGS@
LDFLAGS = -Ltl2 @PTHREAD_CFLAGS@ @LDFLAGS@
LIBS = -ltl2 @PTHREAD_LIBS@ @LIBS@
OCAMLC = @OCAMLC@
OCAMLOPT = @OCAMLOPT@
OCAMLDEP = @OCAMLDEP@
OCAMLCPPFLAGS = -I cil/obj/@ARCHOS@
OCAMLCFLAGS = -w Ae
OCAMLLDFLAGS =
GNUMAKE = @GNUMAKE@
INSTALL = @INSTALL@
STAMP = stamp/lib stamp/bayes stamp/genome stamp/kmeans \
  stamp/labyrinth stamp/vacation
SUBDIRS = tl2 cil bench $(STAMP)
CILLY = cil/bin/cilly
CILLYFLAGS = --keepunused --doatomic --save-temps #--check

.SUFFIXES: .ml .mli .cmo .cmi .cmx .check

.c.o:
	$(CC) $(CPPFLAGS) $(CFLAGS) -c $(srcdir)/$<
.ml.cmo .mli.cmi:
	$(OCAMLC) $(OCAMLCPPFLAGS) $(OCAMLCFLAGS) -c $(srcdir)/$<
.ml.cmx:
	$(OCAMLOPT) $(OCAMLCPPFLAGS) $(OCAMLCFLAGS) -c $(srcdir)/$<

all: subdirs

check: atomic.cmo

subdirs:
	for dir in $(SUBDIRS); do \
	  if test -d "$$dir"; then $(GNUMAKE) -C "$$dir"; fi \
	done

clean:
	for dir in bench $(STAMP); do \
	  if test -d "$$dir"; then $(GNUMAKE) -C "$$dir" clean; fi \
	done
	rm -f *.cmi *.cmo *.cmx *.cil.c *.cil.i *.i
	rm -f *.o *~ gmon.out core *.core

distclean: clean
	for dir in $(SUBDIRS); do \
	  if test -d "$$dir"; then $(GNUMAKE) -C "$$dir" distclean; fi \
	done
	rm -f Makefile config.h config.cache config.log config.status
